>>> a = __import__("7-base_geometry")
>>> bg = a.BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> b = a.BaseGeometry(3)
Traceback (most recent call last):
TypeError: object() takes no parameters
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("test")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("test", 4, 6)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given
>>> bg.integer_validator("test", "asdsa")
Traceback (most recent call last):
TypeError: test must be an integer
>>> bg.integer_validator("test", 65.8)
Traceback (most recent call last):
TypeError: test must be an integer
>>> bg.integer_validator("test", -8)
Traceback (most recent call last):
ValueError: test must be greater than 0
>>> bg.integer_validator("test", 0)
Traceback (most recent call last):
ValueError: test must be greater than 0
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented
>>> bg.area(5)
Traceback (most recent call last):
TypeError: area() takes 1 positional argument but 2 were given
>>> bg.integer_validator("test", {"a":3})
Traceback (most recent call last):
TypeError: test must be an integer
>>> bg.integer_validator("test", [1, 0])
Traceback (most recent call last):
TypeError: test must be an integer
>>> bg.integer_validator("test", (1, 2))
Traceback (most recent call last):
TypeError: test must be an integer
>>> bg.integer_validator("test", False)
Traceback (most recent call last):
TypeError: test must be an integer
>>> bg.integer_validator("test", None)
Traceback (most recent call last):
TypeError: test must be an integer
>>> bg.integer_validator("test", {2, 5})
Traceback (most recent call last):
TypeError: test must be an integer
